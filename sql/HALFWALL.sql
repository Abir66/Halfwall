/*
 Navicat Premium Data Transfer

 Source Server         : halfwall
 Source Server Type    : Oracle
 Source Server Version : 190000
 Source Host           : localhost:1521
 Source Schema         : HALFWALL

 Target Server Type    : Oracle
 Target Server Version : 190000
 File Encoding         : 65001

 Date: 05/09/2022 03:07:03
*/


-- ----------------------------
-- Table structure for COMMENTS
-- ----------------------------
DROP TABLE "HALFWALL"."COMMENTS";
CREATE TABLE "HALFWALL"."COMMENTS" (
  "COMMENT_ID" NUMBER VISIBLE NOT NULL,
  "POST_ID" NUMBER VISIBLE,
  "USER_ID" NUMBER VISIBLE,
  "TIMESTAMP" TIMESTAMP(6) VISIBLE,
  "TEXT" VARCHAR2(2000 BYTE) VISIBLE,
  "IMAGE" VARCHAR2(500 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of COMMENTS
-- ----------------------------
INSERT INTO "HALFWALL"."COMMENTS" VALUES ('206', '168', '1', TO_TIMESTAMP('2022-08-31 10:37:15.672000', 'SYYYY-MM-DD HH24:MI:SS:FF6'), 'comment - 3', NULL);
INSERT INTO "HALFWALL"."COMMENTS" VALUES ('204', '168', '1', TO_TIMESTAMP('2022-08-31 10:36:47.702000', 'SYYYY-MM-DD HH24:MI:SS:FF6'), 'darker', NULL);
INSERT INTO "HALFWALL"."COMMENTS" VALUES ('205', '168', '1', TO_TIMESTAMP('2022-08-31 10:37:08.916000', 'SYYYY-MM-DD HH24:MI:SS:FF6'), 'comms', '/uploads/comments/1662320683752e4fe51a3-b7e1-41de-ad93-a342bcdcfe43.jpg');
INSERT INTO "HALFWALL"."COMMENTS" VALUES ('207', '168', '1', TO_TIMESTAMP('2022-08-31 10:37:20.704000', 'SYYYY-MM-DD HH24:MI:SS:FF6'), 'comments - 4', NULL);
INSERT INTO "HALFWALL"."COMMENTS" VALUES ('208', '168', '1', TO_TIMESTAMP('2022-08-31 10:37:25.463000', 'SYYYY-MM-DD HH24:MI:SS:FF6'), 'comments - 5', NULL);
INSERT INTO "HALFWALL"."COMMENTS" VALUES ('209', '175', '1', TO_TIMESTAMP('2022-08-31 11:56:31.897000', 'SYYYY-MM-DD HH24:MI:SS:FF6'), 'interested', NULL);
INSERT INTO "HALFWALL"."COMMENTS" VALUES ('241', '205', '1', TO_TIMESTAMP('2022-09-05 01:42:12.567000', 'SYYYY-MM-DD HH24:MI:SS:FF6'), 'oka', '/uploads/comments/1662320720566e66cce78-9cd9-4746-8a58-c8c95b442d31.jpg');

-- ----------------------------
-- Table structure for CONVERSATIONS
-- ----------------------------
DROP TABLE "HALFWALL"."CONVERSATIONS";
CREATE TABLE "HALFWALL"."CONVERSATIONS" (
  "CONVERSATION_ID" NUMBER VISIBLE NOT NULL,
  "MESSAGE_ID" NUMBER VISIBLE,
  "TIMESTAMP" TIMESTAMP(6) VISIBLE,
  "NAME" VARCHAR2(255 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of CONVERSATIONS
-- ----------------------------

-- ----------------------------
-- Table structure for CONVERSATION_MEMBERS
-- ----------------------------
DROP TABLE "HALFWALL"."CONVERSATION_MEMBERS";
CREATE TABLE "HALFWALL"."CONVERSATION_MEMBERS" (
  "CONVERSATION_ID" NUMBER VISIBLE NOT NULL,
  "USER_ID" NUMBER VISIBLE NOT NULL,
  "STATUS" VARCHAR2(255 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of CONVERSATION_MEMBERS
-- ----------------------------

-- ----------------------------
-- Table structure for FOLLOWS
-- ----------------------------
DROP TABLE "HALFWALL"."FOLLOWS";
CREATE TABLE "HALFWALL"."FOLLOWS" (
  "FOLLOWER_ID" NUMBER VISIBLE NOT NULL,
  "FOLLOWEE_ID" NUMBER VISIBLE NOT NULL,
  "TIMESTAMP" TIMESTAMP(6) VISIBLE,
  "STATUS" VARCHAR2(255 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of FOLLOWS
-- ----------------------------
INSERT INTO "HALFWALL"."FOLLOWS" VALUES ('65', '1', TO_TIMESTAMP('2022-09-05 02:55:57.563000', 'SYYYY-MM-DD HH24:MI:SS:FF6'), 'REQUESTED');

-- ----------------------------
-- Table structure for GROUPS
-- ----------------------------
DROP TABLE "HALFWALL"."GROUPS";
CREATE TABLE "HALFWALL"."GROUPS" (
  "GROUP_ID" NUMBER VISIBLE NOT NULL,
  "GROUP_NAME" VARCHAR2(255 BYTE) VISIBLE NOT NULL,
  "GROUP_PRIVACY" VARCHAR2(20 BYTE) VISIBLE,
  "GROUP_DESCRIPTION" VARCHAR2(511 BYTE) VISIBLE,
  "COVER_PHOTO" VARCHAR2(255 BYTE) VISIBLE,
  "TIME_OF_CREATION" TIMESTAMP(6) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of GROUPS
-- ----------------------------
INSERT INTO "HALFWALL"."GROUPS" VALUES ('1', 'PERSONAL_PUBLIC', 'PUBLIC', NULL, NULL, NULL);
INSERT INTO "HALFWALL"."GROUPS" VALUES ('2', 'PERSONAL_PRIVATE', 'PERSONAL PRIVATE', NULL, NULL, NULL);
INSERT INTO "HALFWALL"."GROUPS" VALUES ('3', 'Public Forum', 'PUBLIC', NULL, NULL, NULL);
INSERT INTO "HALFWALL"."GROUPS" VALUES ('4', 'Marketplace', 'PUBLIC', NULL, NULL, NULL);
INSERT INTO "HALFWALL"."GROUPS" VALUES ('5', 'Tuition', 'PUBLIC', NULL, NULL, NULL);

-- ----------------------------
-- Table structure for GROUP_MEMBERS
-- ----------------------------
DROP TABLE "HALFWALL"."GROUP_MEMBERS";
CREATE TABLE "HALFWALL"."GROUP_MEMBERS" (
  "GROUP_ID" NUMBER VISIBLE NOT NULL,
  "USER_ID" NUMBER VISIBLE NOT NULL,
  "TIMESTAMP" TIMESTAMP(6) VISIBLE,
  "STATUS" VARCHAR2(255 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of GROUP_MEMBERS
-- ----------------------------

-- ----------------------------
-- Table structure for LIKES
-- ----------------------------
DROP TABLE "HALFWALL"."LIKES";
CREATE TABLE "HALFWALL"."LIKES" (
  "USER_ID" NUMBER VISIBLE NOT NULL,
  "POST_ID" NUMBER VISIBLE NOT NULL,
  "TIMESTAMP" TIMESTAMP(6) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of LIKES
-- ----------------------------
INSERT INTO "HALFWALL"."LIKES" VALUES ('1', '205', TO_TIMESTAMP('2022-09-05 03:05:04.260000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."LIKES" VALUES ('1', '168', TO_TIMESTAMP('2022-08-31 10:11:07.462000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."LIKES" VALUES ('1', '166', TO_TIMESTAMP('2022-09-03 01:57:51.352000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));

-- ----------------------------
-- Table structure for MESSAGES
-- ----------------------------
DROP TABLE "HALFWALL"."MESSAGES";
CREATE TABLE "HALFWALL"."MESSAGES" (
  "MESSAGE_ID" NUMBER VISIBLE NOT NULL,
  "CONVERSATION_ID" NUMBER VISIBLE,
  "USER_ID" NUMBER VISIBLE,
  "TEXT" VARCHAR2(255 BYTE) VISIBLE,
  "TIMESTAMP" TIMESTAMP(6) VISIBLE,
  "TYPE" VARCHAR2(255 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of MESSAGES
-- ----------------------------

-- ----------------------------
-- Table structure for NOTIFICATIONS
-- ----------------------------
DROP TABLE "HALFWALL"."NOTIFICATIONS";
CREATE TABLE "HALFWALL"."NOTIFICATIONS" (
  "NOTIFICATION_ID" NUMBER VISIBLE NOT NULL,
  "RECEIVER_ID" NUMBER VISIBLE,
  "SENDER_ID" NUMBER VISIBLE,
  "LINK" VARCHAR2(255 BYTE) VISIBLE,
  "TEXT" VARCHAR2(255 BYTE) VISIBLE,
  "NOTIFICATION_TYPE" VARCHAR2(255 BYTE) VISIBLE,
  "TYPE_ID" NUMBER VISIBLE,
  "SENT" VARCHAR2(255 BYTE) VISIBLE,
  "TIMESTAMP" TIMESTAMP(6) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of NOTIFICATIONS
-- ----------------------------
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('174', '2', '1', '/user/user_id=2', 'Nazmus Sakib has accepted your follow request.', 'FOLLOW', NULL, 'YES', TO_TIMESTAMP('2022-09-01 09:31:27.337000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('179', '1', '2', '/user/user_id=1', 'Abir Muhtasim has accepted your follow request.', 'FOLLOW', NULL, 'YES', TO_TIMESTAMP('2022-09-01 09:31:27.341000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('197', '2', '1', '/user/user_id=2', 'Nazmus Sakib has accepted your follow request.', 'FOLLOW', NULL, 'YES', TO_TIMESTAMP('2022-09-01 09:32:20.583000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('203', '1', '2', '/user/user_id=1', 'Abir Muhtasim has accepted your follow request.', 'FOLLOW', NULL, 'YES', TO_TIMESTAMP('2022-09-01 09:32:20.587000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('229', '2', '1', '/user/user_id=2', 'Nazmus Sakib has accepted your follow request.', 'FOLLOW', NULL, 'YES', TO_TIMESTAMP('2022-09-03 23:47:20.939000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('235', '1', '2', '/user/user_id=1', 'Abir Muhtasim has accepted your follow request.', 'FOLLOW', NULL, 'YES', TO_TIMESTAMP('2022-09-03 23:47:20.942000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('312', '1', '65', '/user/user_id=65', 'Nazmus Sakib has sent you a follow request.', 'FOLLOW-REQUEST', NULL, 'YES', TO_TIMESTAMP('2022-09-05 02:55:57.569000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('308', '1', NULL, '/groups/group_id=180', NULL, 'GROUP-MEMBERSHIP', '180', 'YES', TO_TIMESTAMP('2022-09-05 01:23:32.718000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('309', '1', NULL, '/groups/group_id=180', 'You have become an admin in the group "ano"', 'GROUP-MEMBERSHIP', '180', 'YES', TO_TIMESTAMP('2022-09-05 01:23:36.512000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('251', '2', '1', '/user/user_id=2', 'Nazmus Sakib has accepted your follow request.', 'FOLLOW', NULL, 'YES', TO_TIMESTAMP('2022-09-03 23:51:30.194000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('257', '1', '2', '/user/user_id=1', 'Abir Muhtasim has accepted your follow request.', 'FOLLOW', NULL, 'YES', TO_TIMESTAMP('2022-09-03 23:51:30.198000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('288', '1', '2', '/posts/post_id=204', 'There is a new post in tuition that might interest you.', 'POST', '204', 'YES', TO_TIMESTAMP('2022-09-04 19:03:26.439000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('273', '2', '1', '/user/user_id=2', 'Nazmus Sakib has accepted your follow request.', 'FOLLOW', NULL, 'YES', TO_TIMESTAMP('2022-09-03 23:55:15.156000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."NOTIFICATIONS" VALUES ('279', '1', '2', '/user/user_id=1', 'Abir Muhtasim has accepted your follow request.', 'FOLLOW', NULL, 'YES', TO_TIMESTAMP('2022-09-03 23:55:15.172000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));

-- ----------------------------
-- Table structure for POSTS
-- ----------------------------
DROP TABLE "HALFWALL"."POSTS";
CREATE TABLE "HALFWALL"."POSTS" (
  "POST_ID" NUMBER VISIBLE NOT NULL,
  "USER_ID" NUMBER VISIBLE NOT NULL,
  "GROUP_ID" NUMBER VISIBLE,
  "TEXT" VARCHAR2(2000 BYTE) VISIBLE,
  "TIMESTAMP" TIMESTAMP(6) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of POSTS
-- ----------------------------
INSERT INTO "HALFWALL"."POSTS" VALUES ('1', '1', '2', 'Abir post 1', TO_TIMESTAMP('2022-06-26 01:02:26.000000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('169', '1', '5', 'They want someone experienced', TO_TIMESTAMP('2022-08-31 09:48:18.760000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('187', '1', '2', 'hhhhhhh', TO_TIMESTAMP('2022-09-03 18:04:35.334000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('166', '1', '4', 'Reason for sell : Want to buy a new one', TO_TIMESTAMP('2022-08-31 09:20:49.166000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('168', '1', '2', 'Another linus post', TO_TIMESTAMP('2022-08-31 09:47:23.767000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('175', '1', '4', '1 year used', TO_TIMESTAMP('2022-08-31 11:56:16.853000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('174', '1', '2', 'fdsdfsdf', TO_TIMESTAMP('2022-08-31 11:48:02.051000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('177', '1', '2', 'adasdasddsad', TO_TIMESTAMP('2022-09-01 17:25:37.366000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('180', '1', '2', NULL, TO_TIMESTAMP('2022-09-02 22:15:41.295000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('186', '1', '2', 'qqqqqqqqqqqqqqq', TO_TIMESTAMP('2022-09-03 18:01:23.616000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('188', '1', '2', 'rsdfsf', TO_TIMESTAMP('2022-09-03 18:05:14.837000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('189', '1', '2', 'yooooo', TO_TIMESTAMP('2022-09-03 18:05:57.555000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('200', '1', '5', 'dsfsdfsfsf', TO_TIMESTAMP('2022-09-04 18:47:21.945000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('199', '1', '2', 'sdfsdfsdf', TO_TIMESTAMP('2022-09-04 16:54:01.644000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('201', '1', '5', NULL, TO_TIMESTAMP('2022-09-04 18:48:11.271000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('202', '1', '5', NULL, TO_TIMESTAMP('2022-09-04 18:49:22.661000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));
INSERT INTO "HALFWALL"."POSTS" VALUES ('205', '1', '2', 'dddddd', TO_TIMESTAMP('2022-09-04 23:00:47.953000', 'SYYYY-MM-DD HH24:MI:SS:FF6'));

-- ----------------------------
-- Table structure for POST_FILES
-- ----------------------------
DROP TABLE "HALFWALL"."POST_FILES";
CREATE TABLE "HALFWALL"."POST_FILES" (
  "POST_FILE_ID" NUMBER VISIBLE NOT NULL,
  "POST_ID" NUMBER VISIBLE,
  "FILE_TYPE" VARCHAR2(255 BYTE) VISIBLE,
  "FILE_LOCATION" VARCHAR2(255 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of POST_FILES
-- ----------------------------
INSERT INTO "HALFWALL"."POST_FILES" VALUES ('45', '166', 'IMAGE', '/uploads/posts/16619160491199c8b8a10-fec0-4012-9d8a-f01ff392d1fa.jpg');
INSERT INTO "HALFWALL"."POST_FILES" VALUES ('47', '168', 'IMAGE', '/uploads/posts/16619176437380a1ad5f3-41d0-46e7-90e2-6f708f7b4298.png');
INSERT INTO "HALFWALL"."POST_FILES" VALUES ('52', '175', 'IMAGE', '/uploads/posts/1661925376787faa79ef5-b153-41e9-a6ba-4a38252ceca4.png');
INSERT INTO "HALFWALL"."POST_FILES" VALUES ('61', '180', 'IMAGE', '/uploads/posts/1662135340801adafd0d9-9c8c-412f-9a27-388b2d9baf9e.png');
INSERT INTO "HALFWALL"."POST_FILES" VALUES ('62', '180', 'VIDEO', '/uploads/posts/1662135341143506ab0fa-b902-4f6b-b251-6dbf4b5b7e2a.mp4');
INSERT INTO "HALFWALL"."POST_FILES" VALUES ('71', '169', 'IMAGE', '/uploads/posts/1662225159652670d89e7-b920-47d0-860f-f94e4d6b938f.jpg');

-- ----------------------------
-- Table structure for SELL_POSTS
-- ----------------------------
DROP TABLE "HALFWALL"."SELL_POSTS";
CREATE TABLE "HALFWALL"."SELL_POSTS" (
  "POST_ID" NUMBER VISIBLE NOT NULL,
  "CATAGORY" VARCHAR2(255 BYTE) VISIBLE,
  "PRICE" NUMBER VISIBLE,
  "CONDITION" VARCHAR2(255 BYTE) VISIBLE,
  "AVAILABLE" VARCHAR2(255 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of SELL_POSTS
-- ----------------------------
INSERT INTO "HALFWALL"."SELL_POSTS" VALUES ('166', 'Bicyle', '80000', 'Used', 'Yes');
INSERT INTO "HALFWALL"."SELL_POSTS" VALUES ('175', 'Electronics', '12000', 'New', 'No');

-- ----------------------------
-- Table structure for STORAGE_DUMP
-- ----------------------------
DROP TABLE "HALFWALL"."STORAGE_DUMP";
CREATE TABLE "HALFWALL"."STORAGE_DUMP" (
  "FILE_PATH" VARCHAR2(255 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of STORAGE_DUMP
-- ----------------------------
INSERT INTO "HALFWALL"."STORAGE_DUMP" VALUES ('/uploads/posts/1661915734453ff4a8163-36b0-44d8-97b4-1f8bb73051b5.jpg');
INSERT INTO "HALFWALL"."STORAGE_DUMP" VALUES ('/uploads/posts/1661915210672499d0f32-bb06-4ec3-96ac-e13ce20232b8.jpg');
INSERT INTO "HALFWALL"."STORAGE_DUMP" VALUES ('/uploads/posts/1662208161002c179760b-3f6c-4b18-832b-0e70880c26fd.png');

-- ----------------------------
-- Table structure for TUITION_NOTIFICATION_CLASSES
-- ----------------------------
DROP TABLE "HALFWALL"."TUITION_NOTIFICATION_CLASSES";
CREATE TABLE "HALFWALL"."TUITION_NOTIFICATION_CLASSES" (
  "USER_ID" NUMBER VISIBLE NOT NULL,
  "CLASS" VARCHAR2(255 BYTE) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of TUITION_NOTIFICATION_CLASSES
-- ----------------------------
INSERT INTO "HALFWALL"."TUITION_NOTIFICATION_CLASSES" VALUES ('1', '10');
INSERT INTO "HALFWALL"."TUITION_NOTIFICATION_CLASSES" VALUES ('1', '9');
INSERT INTO "HALFWALL"."TUITION_NOTIFICATION_CLASSES" VALUES ('1', 'Below class 9');

-- ----------------------------
-- Table structure for TUITION_NOTIFICATION_LOCATIONS
-- ----------------------------
DROP TABLE "HALFWALL"."TUITION_NOTIFICATION_LOCATIONS";
CREATE TABLE "HALFWALL"."TUITION_NOTIFICATION_LOCATIONS" (
  "USER_ID" NUMBER VISIBLE NOT NULL,
  "LOCATION" VARCHAR2(255 BYTE) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of TUITION_NOTIFICATION_LOCATIONS
-- ----------------------------
INSERT INTO "HALFWALL"."TUITION_NOTIFICATION_LOCATIONS" VALUES ('1', 'BANASERR');
INSERT INTO "HALFWALL"."TUITION_NOTIFICATION_LOCATIONS" VALUES ('1', 'Savar');

-- ----------------------------
-- Table structure for TUITION_NOTIFICATION_SUBJECTS
-- ----------------------------
DROP TABLE "HALFWALL"."TUITION_NOTIFICATION_SUBJECTS";
CREATE TABLE "HALFWALL"."TUITION_NOTIFICATION_SUBJECTS" (
  "USER_ID" NUMBER VISIBLE NOT NULL,
  "SUBJECT" VARCHAR2(255 BYTE) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of TUITION_NOTIFICATION_SUBJECTS
-- ----------------------------
INSERT INTO "HALFWALL"."TUITION_NOTIFICATION_SUBJECTS" VALUES ('1', 'Chemistry');
INSERT INTO "HALFWALL"."TUITION_NOTIFICATION_SUBJECTS" VALUES ('1', 'Math');
INSERT INTO "HALFWALL"."TUITION_NOTIFICATION_SUBJECTS" VALUES ('1', 'Physics');

-- ----------------------------
-- Table structure for TUITION_POSTS
-- ----------------------------
DROP TABLE "HALFWALL"."TUITION_POSTS";
CREATE TABLE "HALFWALL"."TUITION_POSTS" (
  "POST_ID" NUMBER VISIBLE NOT NULL,
  "CLASS" VARCHAR2(255 BYTE) VISIBLE,
  "REMUNERATION" NUMBER VISIBLE,
  "STUDENT_COUNT" NUMBER VISIBLE,
  "PREFERENCE" VARCHAR2(255 BYTE) VISIBLE,
  "BOOKED" VARCHAR2(255 BYTE) VISIBLE,
  "LOCATION" VARCHAR2(255 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of TUITION_POSTS
-- ----------------------------
INSERT INTO "HALFWALL"."TUITION_POSTS" VALUES ('169', '10', '10000', '3', 'Male', 'Yes', 'Baridhara');
INSERT INTO "HALFWALL"."TUITION_POSTS" VALUES ('200', '9', '100000', '1', 'N/A', 'No', 'Savar');
INSERT INTO "HALFWALL"."TUITION_POSTS" VALUES ('201', '9', '3213213', '1', 'N/A', 'No', 'Savar');
INSERT INTO "HALFWALL"."TUITION_POSTS" VALUES ('202', '9', '3123123', '1', 'N/A', 'No', 'Savar');

-- ----------------------------
-- Table structure for TUITION_SUBJECTS
-- ----------------------------
DROP TABLE "HALFWALL"."TUITION_SUBJECTS";
CREATE TABLE "HALFWALL"."TUITION_SUBJECTS" (
  "POST_ID" NUMBER VISIBLE NOT NULL,
  "SUBJECT" VARCHAR2(255 BYTE) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of TUITION_SUBJECTS
-- ----------------------------
INSERT INTO "HALFWALL"."TUITION_SUBJECTS" VALUES ('169', 'Math');
INSERT INTO "HALFWALL"."TUITION_SUBJECTS" VALUES ('169', 'Physics');
INSERT INTO "HALFWALL"."TUITION_SUBJECTS" VALUES ('200', 'Math');
INSERT INTO "HALFWALL"."TUITION_SUBJECTS" VALUES ('200', 'Physics');
INSERT INTO "HALFWALL"."TUITION_SUBJECTS" VALUES ('201', 'Math');
INSERT INTO "HALFWALL"."TUITION_SUBJECTS" VALUES ('201', 'Physics');
INSERT INTO "HALFWALL"."TUITION_SUBJECTS" VALUES ('202', 'Math');
INSERT INTO "HALFWALL"."TUITION_SUBJECTS" VALUES ('202', 'Physics');

-- ----------------------------
-- Table structure for USERS
-- ----------------------------
DROP TABLE "HALFWALL"."USERS";
CREATE TABLE "HALFWALL"."USERS" (
  "USER_ID" NUMBER VISIBLE NOT NULL,
  "STUDENT_ID" NUMBER VISIBLE NOT NULL,
  "NAME" VARCHAR2(255 BYTE) VISIBLE NOT NULL,
  "EMAIL" VARCHAR2(255 BYTE) VISIBLE NOT NULL,
  "PASSWORD" VARCHAR2(255 BYTE) VISIBLE NOT NULL,
  "DEPARTMENT" VARCHAR2(255 BYTE) VISIBLE,
  "DATE_OF_BIRTH" DATE VISIBLE,
  "HALL" VARCHAR2(255 BYTE) VISIBLE,
  "HALL_ATTACHMENT" CHAR(1 BYTE) VISIBLE,
  "BATCH" NUMBER VISIBLE,
  "PROFILE_PIC" VARCHAR2(255 BYTE) VISIBLE,
  "STREET" VARCHAR2(255 BYTE) VISIBLE,
  "CITY" VARCHAR2(255 BYTE) VISIBLE,
  "POSTCODE" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  FREELISTS 1
  FREELIST GROUPS 1
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of USERS
-- ----------------------------
INSERT INTO "HALFWALL"."USERS" VALUES ('1', '1905066', 'ABIR MUHTASIM', 'auntor505@gmail.com', '1234', 'CSE', TO_DATE('2022-09-16 00:00:00', 'SYYYY-MM-DD HH24:MI:SS'), NULL, 'A', '2019', '/uploads/profile-pictures/16623212359135a2d56d3-2653-4c54-92af-016e4b273a37.jpg', 'FARIDPUR GORSTAN MON', 'DINAJPUR', NULL);
INSERT INTO "HALFWALL"."USERS" VALUES ('65', '1905061', 'Nazmus Sakib', '1905061@ugrad.cse.buet.ac.bd', '1234', 'CSE', NULL, NULL, NULL, '2019', NULL, NULL, NULL, NULL);

-- ----------------------------
-- Function structure for CHECK_FOLLOWING
-- ----------------------------
CREATE OR REPLACE
FUNCTION "HALFWALL"."CHECK_FOLLOWING" AS
BEGIN
	FOLLOW_STATUS := 0;
	SELECT 1 INTO FOLLOW_STATUS
	FROM FOLLOWS
	WHERE FOLLOWEE_ID = Q_FOLLOWEE_ID AND FOLLOWER_ID = Q_FOLLOWER_ID AND STATUS = 'FOLLOWING';
	RETURN FOLLOW_STATUS;
END;
/

-- ----------------------------
-- Function structure for COMMENT_COUNT
-- ----------------------------
CREATE OR REPLACE
FUNCTION "HALFWALL"."COMMENT_COUNT" AS
BEGIN
	SELECT COUNT(*) INTO NUMBER_OF_COMMENTS FROM COMMENTS
	WHERE POST_ID = Q_POST_ID;
	RETURN NUMBER_OF_COMMENTS ;
END;
/

-- ----------------------------
-- Function structure for CREATE_COMMENT
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."CREATE_COMMENT" AS
BEGIN
	
	R_COMMENT_ID := COMMENT_SEQ.NEXTVAL;
	
	INSERT INTO COMMENTS(COMMENT_ID, POST_ID, USER_ID, TEXT, IMAGE, TIMESTAMP)
	VALUES(R_COMMENT_ID, Q_POST_ID, Q_USER_ID, Q_TEXT, Q_IMAGE, CURRENT_TIMESTAMP);
	
	RESULT := 'success';
	
EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'something went wrong';
	
END;
/

-- ----------------------------
-- Function structure for CREATE_CONVERSATION
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."CREATE_CONVERSATION" AS
BEGIN
	NEW_CONVERSATION_ID := CONVERSATION_SEQ.NEXTVAL;
	INSERT INTO CONVERSATIONS (CONVERSATION_ID,TIMESTAMP)
	VALUES( NEW_CONVERSATION_ID,CURRENT_TIMESTAMP);
	
	
	RESULT := NEW_CONVERSATION_ID;
	
	EXCEPTION
		WHEN OTHERS THEN
			RESULT := -1;
	-- routine body goes here, e.g.
	-- DBMS_OUTPUT.PUT_LINE('Navicat for Oracle');
END;
/

-- ----------------------------
-- Function structure for CREATE_CONVERSATION_MEMBERS
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."CREATE_CONVERSATION_MEMBERS" AS
BEGIN

	INSERT INTO CONVERSATION_MEMBERS (CONVERSATION_ID,USER_ID,STATUS)
	VALUES(CONVERSATION_ID ,USER_ID,'S');
	
	
	RESULT := CONVERSATION_ID;
	
	EXCEPTION
		WHEN OTHERS THEN
			RESULT := -1;
	-- routine body goes here, e.g.
	-- DBMS_OUTPUT.PUT_LINE('Navicat for Oracle');
END;
/

-- ----------------------------
-- Function structure for CREATE_GROUP
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."CREATE_GROUP" AS
BEGIN
	NEW_GROUP_ID := GROUP_SEQ.NEXTVAL;
	INSERT INTO GROUPS (GROUP_ID, GROUP_NAME, GROUP_PRIVACY, GROUP_DESCRIPTION, COVER_PHOTO, TIME_OF_CREATION)
	VALUES (NEW_GROUP_ID, NEW_GROUP_NAME, NEW_GROUP_PRIVACY, NEW_DESCRIPTION, NEW_COVER_PHOTO, CURRENT_TIMESTAMP);
	
	INSERT INTO GROUP_MEMBERS(GROUP_ID, USER_ID, TIMESTAMP, STATUS)
	VALUES(NEW_GROUP_ID, NEW_ADMIN_ID, CURRENT_TIMESTAMP, 'ADMIN');
	RESULT := 'success';
	R_GROUP_ID := NEW_GROUP_ID;

EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'please enter the fields correctly';
END;
/

-- ----------------------------
-- Function structure for CREATE_MESSAGE
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."CREATE_MESSAGE" AS
BEGIN
	NEW_MESSAGE_ID := MESSAGE_SEQ.NEXTVAL;
	INSERT INTO MESSAGES (MESSAGE_ID,CONVERSATION_ID,USER_ID,TEXT,TIMESTAMP)
	VALUES( NEW_MESSAGE_ID,NEW_CHAT_ID,NEW_USER_ID,NEW_TEXT,CURRENT_TIMESTAMP);
	
	RESULT := NEW_MESSAGE_ID;
	
	EXCEPTION
		WHEN OTHERS THEN
			RESULT := -1;
	
END;
/

-- ----------------------------
-- Function structure for CREATE_POST
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."CREATE_POST" AS
BEGIN
	
	R_POST_ID := -1;
	
	-- CHECK IF GROUP EXISTS
	SELECT COUNT(*) INTO GROUP_EXISTS FROM GROUPS WHERE GROUP_ID = Q_GROUP_ID;
	IF GROUP_EXISTS = 0 THEN
		RESULT := 'Group does not exist';
		RETURN;
	END IF;
			
	-- IF GROUP POST THEN CHECK IF MEMBER
	IF Q_GROUP_ID > 100 THEN	
		Q_GROUP_MEMBERSHIP := GROUP_MEMBERSHIP_STATUS(Q_GROUP_ID, Q_USER_ID);
		
		IF (Q_GROUP_MEMBERSHIP <> 'ADMIN' AND Q_GROUP_MEMBERSHIP <> 'MEMBER') THEN
			RESULT := 'Group membership invalid';
			RETURN;
		END IF;
		
	END IF;
	
	R_POST_ID := POST_SEQ.NEXTVAL;
	INSERT INTO POSTS(POST_ID, USER_ID, GROUP_ID, TEXT, TIMESTAMP)
	VALUES(R_POST_ID, Q_USER_ID, Q_GROUP_ID, Q_TEXT, CURRENT_TIMESTAMP);
	RESULT := 'success';
	
	
		
EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'something went wrong';
		
		
END;
/

-- ----------------------------
-- Function structure for CREATE_USER
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."CREATE_USER" AS
BEGIN
	NEW_USER_ID := USER_SEQ.NEXTVAL;
	INSERT INTO USERS
	VALUES  (NEW_USER_ID, NEW_STUDENT_ID, INITCAP(NEW_NAME), LOWER(NEW_EMAIL), NEW_PASSWORD, UPPER(NEW_DEPARTMENT), NEW_DATE_OF_BIRTH, UPPER(NEW_HALL), UPPER(NEW_HALL_ATTACHMENT), NEW_BATCH, NEW_PROFILE_PIC, UPPER(NEW_STREET), UPPER(NEW_CITY), NEW_POSTCODE );

	RESULT := NEW_USER_ID;

	EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Student ID or email already exists';
    WHEN OTHERS THEN
        RESULT := 'Something went wrong';
END;
/

-- ----------------------------
-- Function structure for DELETE_MESSAGE
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."DELETE_MESSAGE" AS
BEGIN
	UPDATE MESSAGES
	SET TEXT = 'This message has been deletd',TYPE = 'DELETED'
	WHERE MESSAGE_ID = OLD_MESSAGE_ID;
	RESULT := 'success';
	
	EXCEPTION
		WHEN OTHERS THEN
			RESULT := 'failed';
END;
/

-- ----------------------------
-- Function structure for DELETE_USER
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."DELETE_USER" AS
BEGIN

	SELECT PASSWORD INTO USER_PASSWORD FROM USERS WHERE USER_ID = Q_USER_ID;
	IF USER_PASSWORD = Q_PASSWORD THEN
		DELETE FROM USERS WHERE USER_ID = Q_USER_ID;
	ELSE
		RESULT := 'Incorrect password';
		RETURN;
	END IF;
	
	RESULT := 'success';
	RETURN;
	
EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'something went wrong';
END;
/

-- ----------------------------
-- Function structure for GET_USER_NAME
-- ----------------------------
CREATE OR REPLACE
FUNCTION "HALFWALL"."GET_USER_NAME" AS
BEGIN
	SELECT NAME INTO USER_NAME 
	FROM USERS
	WHERE USER_ID = Q_USER_ID; 
	RETURN USER_NAME;
END;
/

-- ----------------------------
-- Function structure for GET_USER_PROFILE_PIC
-- ----------------------------
CREATE OR REPLACE
FUNCTION "HALFWALL"."GET_USER_PROFILE_PIC" AS
BEGIN
	SELECT PROFILE_PIC INTO PFP FROM USERS WHERE USER_ID = Q_USER_ID;
	RETURN PFP;
END;
/

-- ----------------------------
-- Function structure for GROUP_MEMBERSHIP_STATUS
-- ----------------------------
CREATE OR REPLACE
FUNCTION "HALFWALL"."GROUP_MEMBERSHIP_STATUS" AS
BEGIN
	SELECT STATUS INTO MEMBERSHIP FROM GROUP_MEMBERS
	WHERE GROUP_ID = Q_GROUP_ID AND USER_ID = Q_USER_ID;
	
	RETURN MEMBERSHIP;

EXCEPTION
	WHEN OTHERS THEN
		RETURN NULL;
	
END;
/

-- ----------------------------
-- Function structure for LEAVE_GROUP
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."LEAVE_GROUP" AS
BEGIN

	MEMBERSHIP := GROUP_MEMBERSHIP_STATUS(Q_GROUP_ID, Q_USER_ID);
	IF MEMBERSHIP = 'ADMIN' THEN
			SELECT COUNT(*) INTO ADMIN_COUNT FROM GROUP_MEMBERS
			WHERE GROUP_ID = Q_GROUP_ID AND STATUS = 'ADMIN';
			
			IF ADMIN_COUNT = 1 THEN
				RESULT := 'only admin';
				RETURN;
			END IF;	
	END IF;
	
	DELETE FROM GROUP_MEMBERS
	WHERE GROUP_ID = Q_GROUP_ID AND USER_ID = Q_USER_ID;
	
	RESULT := 'success';

EXCEPTION
	WHEN OTHERS THEN
		RESULT := 'Something went wrong';
END;
/

-- ----------------------------
-- Function structure for LIKE_COUNT
-- ----------------------------
CREATE OR REPLACE
FUNCTION "HALFWALL"."LIKE_COUNT" AS
BEGIN
	
	IF Q_TIMESTAMP IS NULL THEN
		SELECT COUNT(*) INTO NUMBER_OF_LIKES FROM LIKES
		WHERE POST_ID = Q_POST_ID;
		RETURN NUMBER_OF_LIKES;
	END IF;
END;
/

-- ----------------------------
-- Function structure for PROCESS_FOLLOW
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."PROCESS_FOLLOW" AS
BEGIN
	
	IF UPPER(ACTION) = 'START-FOLLOW' THEN
		INSERT INTO FOLLOWS(FOLLOWER_ID, FOLLOWEE_ID, STATUS, TIMESTAMP)
		VALUES (Q_FOLLOWER_ID, Q_FOLLOWEE_ID, 'REQUESTED', CURRENT_TIMESTAMP);
	
	ELSIF UPPER(ACTION) = 'UNFOLLOW' OR UPPER(ACTION) =  'REMOVE-FOLLOW' THEN 
		DELETE FROM FOLLOWS WHERE FOLLOWER_ID = Q_FOLLOWER_ID AND FOLLOWEE_ID = Q_FOLLOWEE_ID;
		
	ELSIF UPPER(ACTION) = 'ACCEPT-FOLLOW' THEN
		UPDATE FOLLOWS
		SET STATUS = 'FOLLOWING'
		WHERE FOLLOWER_ID = FOLLOWER_ID AND FOLLOWEE_ID = FOLLOWEE_ID;
	
	ELSE
	
		RESULT := 'WRONG COMMAND';
		RETURN;
	
	END IF;
	
	
	
	RESULT := 'success';
	
EXCEPTION
   WHEN DUP_VAL_ON_INDEX THEN
       RESULT := 'ROW ALREADY EXISTS';
   WHEN OTHERS THEN
       RESULT := 'Something went wrong';
END;
/

-- ----------------------------
-- Function structure for PROCESS_GROUP_MEMBER
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."PROCESS_GROUP_MEMBER" AS
BEGIN
	-- First check if the admin is valid
	IF GROUP_MEMBERSHIP_STATUS(Q_GROUP_ID, Q_ADMIN_ID) <> 'ADMIN' THEN
		RESULT := 'adminship not valid';
		RETURN;
	END IF;
	
	IF ACTION = 'accept-pending' THEN
		UPDATE GROUP_MEMBERS SET STATUS = 'MEMBER', TIMESTAMP = CURRENT_TIMESTAMP WHERE GROUP_ID = Q_GROUP_ID AND USER_ID = Q_USER_ID AND STATUS = 'PENDING';
		
	ELSIF ACTION = 'remove-pending' THEN
		DELETE FROM GROUP_MEMBERS WHERE GROUP_ID = Q_GROUP_ID AND USER_ID = Q_USER_ID AND STATUS = 'PENDING';
		
	ELSIF ACTION = 'make-admin' THEN
		UPDATE GROUP_MEMBERS SET STATUS = 'ADMIN' WHERE GROUP_ID = Q_GROUP_ID AND USER_ID = Q_USER_ID AND STATUS = 'MEMBER';
		
	ELSIF ACTION = 'remove-member' THEN
		DELETE FROM GROUP_MEMBERS WHERE GROUP_ID = Q_GROUP_ID AND USER_ID = Q_USER_ID AND STATUS = 'MEMBER';
		
	ELSIF ACTION = 'remove-admin' THEN
		UPDATE GROUP_MEMBERS SET STATUS = 'MEMBER' WHERE GROUP_ID = Q_GROUP_ID AND USER_ID = Q_USER_ID AND STATUS = 'ADMIN';

	END IF;
	
	RESULT := 'success';
	
	EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'Something went wrong';
	
END;
/

-- ----------------------------
-- Function structure for UPDATE_USER
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "HALFWALL"."UPDATE_USER" AS
BEGIN
	    UPDATE USERS
      SET
				STUDENT_ID = NEW_STUDENT_ID,
        NAME = INITCAP(NEW_NAME),
		    EMAIL = LOWER(NEW_EMAIL),
				PASSWORD = NEW_PASSWORD,
		    DATE_OF_BIRTH = TO_DATE(NEW_DATE_OF_BIRTH,'YYYY-MM-DD'),
         HALL = UPPER(NEW_HALL),
		    HALL_ATTACHMENT = UPPER(NEW_HALL_ATTACHMENT),
		    STREET = UPPER(NEW_STREET),
		    CITY = UPPER(NEW_CITY),
				POSTCODE = NEW_POSTCODE
                    
        WHERE USER_ID = NEW_USER_ID;
				
				RESULT := 'success';

	EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Student ID or email already exists';
    WHEN OTHERS THEN
        RESULT := 'Something went wrong';
END;
/

-- ----------------------------
-- Function structure for USER_LIKED_THIS_POST
-- ----------------------------
CREATE OR REPLACE
FUNCTION "HALFWALL"."USER_LIKED_THIS_POST" AS
BEGIN
	USER_LIKED := 0;
	SELECT 1 INTO USER_LIKED FROM LIKES WHERE POST_ID = Q_POST_ID AND USER_ID = Q_USER_ID;
	RETURN USER_LIKED;
END;
/

-- ----------------------------
-- Sequence structure for COMMENT_SEQ
-- ----------------------------
DROP SEQUENCE "HALFWALL"."COMMENT_SEQ";
CREATE SEQUENCE "HALFWALL"."COMMENT_SEQ" MINVALUE 101 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for CONVERSATION_SEQ
-- ----------------------------
DROP SEQUENCE "HALFWALL"."CONVERSATION_SEQ";
CREATE SEQUENCE "HALFWALL"."CONVERSATION_SEQ" MINVALUE 30 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for GROUP_SEQ
-- ----------------------------
DROP SEQUENCE "HALFWALL"."GROUP_SEQ";
CREATE SEQUENCE "HALFWALL"."GROUP_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for MESSAGE_SEQ
-- ----------------------------
DROP SEQUENCE "HALFWALL"."MESSAGE_SEQ";
CREATE SEQUENCE "HALFWALL"."MESSAGE_SEQ" MINVALUE 210 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for NOTIFICATION_SEQ
-- ----------------------------
DROP SEQUENCE "HALFWALL"."NOTIFICATION_SEQ";
CREATE SEQUENCE "HALFWALL"."NOTIFICATION_SEQ" MINVALUE 100 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for POST_FILE_SEQ
-- ----------------------------
DROP SEQUENCE "HALFWALL"."POST_FILE_SEQ";
CREATE SEQUENCE "HALFWALL"."POST_FILE_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for POST_SEQ
-- ----------------------------
DROP SEQUENCE "HALFWALL"."POST_SEQ";
CREATE SEQUENCE "HALFWALL"."POST_SEQ" MINVALUE 100 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for USER_SEQ
-- ----------------------------
DROP SEQUENCE "HALFWALL"."USER_SEQ";
CREATE SEQUENCE "HALFWALL"."USER_SEQ" MINVALUE 5 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Primary Key structure for table COMMENTS
-- ----------------------------
ALTER TABLE "HALFWALL"."COMMENTS" ADD CONSTRAINT "SYS_C007673" PRIMARY KEY ("COMMENT_ID");

-- ----------------------------
-- Checks structure for table COMMENTS
-- ----------------------------
ALTER TABLE "HALFWALL"."COMMENTS" ADD CONSTRAINT "SYS_C007672" CHECK ("COMMENT_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table COMMENTS
-- ----------------------------
CREATE TRIGGER "HALFWALL"."COMMENT_INSERT_NOTIFICATION_TRG" AFTER INSERT ON "HALFWALL"."COMMENTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
RECEIVER NUMBER;
SENDER_NAME VARCHAR2(255);
NOTIFICATION_LINK VARCHAR2(255);
NOTIFICATION_TEXT VARCHAR(255);

BEGIN

		SELECT USER_ID INTO RECEIVER FROM POSTS P WHERE P.POST_ID = :NEW.POST_ID;
		
		IF RECEIVER <> :NEW.USER_ID THEN
			SELECT INITCAP(U.NAME) INTO SENDER_NAME FROM USERS U WHERE U.USER_ID = :NEW.USER_ID;
			NOTIFICATION_LINK := '/posts/post_id=' || :NEW.POST_ID ||'/comment/comment_id='||:NEW.COMMENT_ID;
			NOTIFICATION_TEXT := SENDER_NAME || ' commented on one of your posts.';
			INSERT INTO NOTIFICATIONS(RECEIVER_ID, SENDER_ID, LINK, TEXT, NOTIFICATION_TYPE, TYPE_ID)
			VALUES(RECEIVER, :NEW.USER_ID, NOTIFICATION_LINK, NOTIFICATION_TEXT ,'COMMENTS', :NEW.COMMENT_ID);
		END IF;
END;
/
CREATE TRIGGER "HALFWALL"."COMMENT_UPDATE_NOTIFICATION_TRG" AFTER UPDATE ON "HALFWALL"."COMMENTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
RECEIVER NUMBER;
SENDER_NAME VARCHAR2(255);
NOTIFICATION_LINK VARCHAR2(255);
NOTIFICATION_TEXT VARCHAR(255);

BEGIN

		SELECT USER_ID INTO RECEIVER FROM POSTS P WHERE P.POST_ID = :NEW.POST_ID;
		
		IF RECEIVER <> :NEW.USER_ID THEN
			SELECT INITCAP(U.NAME) INTO SENDER_NAME FROM USERS U WHERE U.USER_ID = :NEW.USER_ID;
			NOTIFICATION_LINK := '/posts/post_id=' || :NEW.POST_ID ||'/comment/comment_id='||:NEW.COMMENT_ID;
			NOTIFICATION_TEXT := SENDER_NAME || ' edited their comment on one of your posts.';
			INSERT INTO NOTIFICATIONS(RECEIVER_ID, SENDER_ID, LINK, TEXT, NOTIFICATION_TYPE, TYPE_ID)
			VALUES(RECEIVER, :NEW.USER_ID, NOTIFICATION_LINK, NOTIFICATION_TEXT ,'COMMENTS', :NEW.COMMENT_ID);
		END IF;
END;
/
CREATE TRIGGER "HALFWALL"."DELETE_COMMENT_NOTIFICATION_TRG" AFTER DELETE ON "HALFWALL"."COMMENTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
  DELETE FROM NOTIFICATIONS
	WHERE NOTIFICATION_TYPE = 'COMMENTS'
	AND TYPE_ID = :OLD.COMMENT_ID;
END;
/
CREATE TRIGGER "HALFWALL"."UPDATE_DELETE_COMMENT_IMAGE_TRIGGER" AFTER DELETE OR UPDATE OF "IMAGE" ON "HALFWALL"."COMMENTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
  IF :OLD.IMAGE IS NOT NULL THEN
		INSERT INTO STORAGE_DUMP(FILE_PATH) VALUES(:OLD.IMAGE);
	END IF;
END;
/

-- ----------------------------
-- Primary Key structure for table CONVERSATIONS
-- ----------------------------
ALTER TABLE "HALFWALL"."CONVERSATIONS" ADD CONSTRAINT "SYS_C007699" PRIMARY KEY ("CONVERSATION_ID");

-- ----------------------------
-- Checks structure for table CONVERSATIONS
-- ----------------------------
ALTER TABLE "HALFWALL"."CONVERSATIONS" ADD CONSTRAINT "SYS_C007698" CHECK ("CONVERSATION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table CONVERSATION_MEMBERS
-- ----------------------------
ALTER TABLE "HALFWALL"."CONVERSATION_MEMBERS" ADD CONSTRAINT "SYS_C007701" PRIMARY KEY ("CONVERSATION_ID", "USER_ID");

-- ----------------------------
-- Checks structure for table CONVERSATION_MEMBERS
-- ----------------------------
ALTER TABLE "HALFWALL"."CONVERSATION_MEMBERS" ADD CONSTRAINT "SYS_C007700" CHECK ("CONVERSATION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table FOLLOWS
-- ----------------------------
ALTER TABLE "HALFWALL"."FOLLOWS" ADD CONSTRAINT "SYS_C007445" PRIMARY KEY ("FOLLOWER_ID", "FOLLOWEE_ID");

-- ----------------------------
-- Checks structure for table FOLLOWS
-- ----------------------------
ALTER TABLE "HALFWALL"."FOLLOWS" ADD CONSTRAINT "SYS_C007443" CHECK ("FOLLOWER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."FOLLOWS" ADD CONSTRAINT "SYS_C007444" CHECK ("FOLLOWEE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."FOLLOWS" ADD CONSTRAINT "SYS_C007488" CHECK ("FOLLOWER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."FOLLOWS" ADD CONSTRAINT "SYS_C007489" CHECK ("FOLLOWEE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table FOLLOWS
-- ----------------------------
CREATE TRIGGER "HALFWALL"."FOLLOW_INSERT_UPDATE_TRG" AFTER INSERT OR UPDATE OF "STATUS" ON "HALFWALL"."FOLLOWS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
	FOLLOWER_NAME VARCHAR2(255);
	FOLLOWEE_NAME VARCHAR2(255);
	NOTIFICATION_LINK VARCHAR2(255);
	NOTIFICATION_TEXT VARCHAR(255);
BEGIN
  
	SELECT INITCAP(U.NAME) INTO FOLLOWER_NAME FROM USERS U WHERE USER_ID = :NEW.FOLLOWER_ID;
	SELECT INITCAP(U.NAME) INTO FOLLOWEE_NAME FROM USERS U WHERE USER_ID = :NEW.FOLLOWEE_ID;
	
	-- ACCEPTED FOLLOW REQUESTED
	IF UPPER(:NEW.STATUS) = 'FOLLOWING' THEN
		
		NOTIFICATION_LINK := '/user/user_id=' || :NEW.FOLLOWEE_ID;
		NOTIFICATION_TEXT := FOLLOWEE_NAME || ' has accepted your follow request.';
		
		INSERT INTO NOTIFICATIONS(RECEIVER_ID, SENDER_ID, LINK, TEXT, NOTIFICATION_TYPE, TYPE_ID, TIMESTAMP)
		VALUES(:NEW.FOLLOWEE_ID, :NEW.FOLLOWER_ID, NOTIFICATION_LINK, NOTIFICATION_TEXT ,'FOLLOW', NULL, CURRENT_TIMESTAMP);
		
		DELETE FROM NOTIFICATIONS
		WHERE NOTIFICATION_TYPE = 'FOLLOW-REQUEST'
		AND RECEIVER_ID = :NEW.FOLLOWEE_ID
		AND SENDER_ID = :NEW.FOLLOWER_ID;
		
	ELSIF UPPER(:NEW.STATUS) = 'REQUESTED' THEN
		
		NOTIFICATION_LINK := '/user/user_id=' || :NEW.FOLLOWER_ID;
		NOTIFICATION_TEXT := FOLLOWER_NAME || ' has sent you a follow request.';
		
		INSERT INTO NOTIFICATIONS(RECEIVER_ID, SENDER_ID, LINK, TEXT, NOTIFICATION_TYPE, TYPE_ID, TIMESTAMP)
		VALUES(:NEW.FOLLOWEE_ID, :NEW.FOLLOWER_ID, NOTIFICATION_LINK, NOTIFICATION_TEXT ,'FOLLOW-REQUEST', NULL, CURRENT_TIMESTAMP);
	
	
	END IF;
	
	
END;
/

-- ----------------------------
-- Primary Key structure for table GROUPS
-- ----------------------------
ALTER TABLE "HALFWALL"."GROUPS" ADD CONSTRAINT "SYS_C007549" PRIMARY KEY ("GROUP_ID");

-- ----------------------------
-- Checks structure for table GROUPS
-- ----------------------------
ALTER TABLE "HALFWALL"."GROUPS" ADD CONSTRAINT "SYS_C007547" CHECK ("GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."GROUPS" ADD CONSTRAINT "SYS_C007548" CHECK ("GROUP_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table GROUP_MEMBERS
-- ----------------------------
ALTER TABLE "HALFWALL"."GROUP_MEMBERS" ADD CONSTRAINT "SYS_C007582" PRIMARY KEY ("GROUP_ID", "USER_ID");

-- ----------------------------
-- Checks structure for table GROUP_MEMBERS
-- ----------------------------
ALTER TABLE "HALFWALL"."GROUP_MEMBERS" ADD CONSTRAINT "SYS_C007580" CHECK ("GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."GROUP_MEMBERS" ADD CONSTRAINT "SYS_C007581" CHECK ("USER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table GROUP_MEMBERS
-- ----------------------------
CREATE TRIGGER "HALFWALL"."GROUP_MEMBER_DELETE_NOTIFICATION_TRG" AFTER DELETE ON "HALFWALL"."GROUP_MEMBERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW DISABLE 
BEGIN
  DELETE FROM NOTIFICATIONS
	WHERE NOTIFICATION_TYPE = 'GROUP-MEMBERSHIP' AND TYPE_ID = :OLD.GROUP_ID AND RECEIVER_ID = :OLD.USER_ID;
END;
/
CREATE TRIGGER "HALFWALL"."GROUP_MEMBER_UPDATE_NOTIFICATION_TRG" AFTER UPDATE OF "STATUS" ON "HALFWALL"."GROUP_MEMBERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
RECEIVER NUMBER;
Q_GROUP_NAME VARCHAR2(255);
NOTIFICATION_LINK VARCHAR2(255);
NOTIFICATION_TEXT VARCHAR(255);

BEGIN
	
		NOTIFICATION_LINK := '/groups/group_id=' || :NEW.GROUP_ID;
		SELECT GROUP_NAME INTO Q_GROUP_NAME FROM GROUPS G WHERE G.GROUP_ID = :NEW.GROUP_ID;
		
		IF :OLD.STATUS = 'PENDING' AND :NEW.STATUS = 'MEMBER' THEN
			NOTIFICATION_TEXT := 'Your join request in the group "' || Q_GROUP_NAME ||'" has been approved';
			
		ELSIF :OLD.STATUS = 'MEMBER' AND :NEW.STATUS = 'ADMIN' THEN
			NOTIFICATION_TEXT := 'You have become an admin in the group "' || Q_GROUP_NAME ||'"';

		END IF;
		
		INSERT INTO NOTIFICATIONS(RECEIVER_ID, SENDER_ID, LINK, TEXT, NOTIFICATION_TYPE, TYPE_ID)
		VALUES(:NEW.USER_ID, NULL, NOTIFICATION_LINK, NOTIFICATION_TEXT ,'GROUP-MEMBERSHIP', :NEW.GROUP_ID);
END;
/

-- ----------------------------
-- Primary Key structure for table LIKES
-- ----------------------------
ALTER TABLE "HALFWALL"."LIKES" ADD CONSTRAINT "SYS_C007559" PRIMARY KEY ("USER_ID", "POST_ID");

-- ----------------------------
-- Checks structure for table LIKES
-- ----------------------------
ALTER TABLE "HALFWALL"."LIKES" ADD CONSTRAINT "SYS_C007556" CHECK ("USER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."LIKES" ADD CONSTRAINT "SYS_C007557" CHECK ("POST_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table LIKES
-- ----------------------------
CREATE TRIGGER "HALFWALL"."LIKES_DELETE_NOTIFICATION" AFTER DELETE ON "HALFWALL"."LIKES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
  DELETE FROM NOTIFICATIONS
	WHERE NOTIFICATION_TYPE = 'LIKES'
	AND TYPE_ID = :OLD.POST_ID
	AND SENDER_ID = :OLD.USER_ID;
END;
/
CREATE TRIGGER "HALFWALL"."LIKES_INSERT_NOTIFICATION" AFTER INSERT ON "HALFWALL"."LIKES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
RECEIVER NUMBER;
SENDER_NAME VARCHAR2(255);
NOTIFICATION_LINK VARCHAR2(255);
NOTIFICATION_TEXT VARCHAR(255);

BEGIN
		
		SELECT USER_ID INTO RECEIVER FROM POSTS P WHERE P.POST_ID = :NEW.POST_ID;
		IF RECEIVER <> :NEW.USER_ID THEN
		
		SELECT INITCAP(U.NAME) INTO SENDER_NAME FROM USERS U WHERE U.USER_ID = :NEW.USER_ID;
 		
		NOTIFICATION_LINK := '/posts/post_id=' || :NEW.POST_ID;
 		
		NOTIFICATION_TEXT := SENDER_NAME || ' liked one of your posts.';
		
 		INSERT INTO NOTIFICATIONS(RECEIVER_ID, SENDER_ID, LINK, TEXT, NOTIFICATION_TYPE, TYPE_ID)
		VALUES(RECEIVER, :NEW.USER_ID, NOTIFICATION_LINK, NOTIFICATION_TEXT ,'LIKES', :NEW.POST_ID);
		END IF;
END;
/

-- ----------------------------
-- Primary Key structure for table MESSAGES
-- ----------------------------
ALTER TABLE "HALFWALL"."MESSAGES" ADD CONSTRAINT "SYS_C007703" PRIMARY KEY ("MESSAGE_ID");

-- ----------------------------
-- Checks structure for table MESSAGES
-- ----------------------------
ALTER TABLE "HALFWALL"."MESSAGES" ADD CONSTRAINT "SYS_C007702" CHECK ("MESSAGE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table MESSAGES
-- ----------------------------
CREATE TRIGGER "HALFWALL"."INSERT_MESSAGE_TRIGGER" AFTER INSERT ON "HALFWALL"."MESSAGES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
  UPDATE CONVERSATIONS 
	SET MESSAGE_ID = :NEW.MESSAGE_ID,TIMESTAMP = :NEW.TIMESTAMP
	WHERE CONVERSATION_ID = :NEW.CONVERSATION_ID;
END;
/

-- ----------------------------
-- Primary Key structure for table NOTIFICATIONS
-- ----------------------------
ALTER TABLE "HALFWALL"."NOTIFICATIONS" ADD CONSTRAINT "SYS_C007716" PRIMARY KEY ("NOTIFICATION_ID");

-- ----------------------------
-- Checks structure for table NOTIFICATIONS
-- ----------------------------
ALTER TABLE "HALFWALL"."NOTIFICATIONS" ADD CONSTRAINT "SYS_C007715" CHECK ("NOTIFICATION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table NOTIFICATIONS
-- ----------------------------
CREATE TRIGGER "HALFWALL"."NOTIFICATION_INSERT_TRG_1" BEFORE INSERT ON "HALFWALL"."NOTIFICATIONS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
  :NEW.NOTIFICATION_ID := NOTIFICATION_SEQ.NEXTVAL;
	:NEW.SENT := 'NO';
	:NEW.TIMESTAMP := CURRENT_TIMESTAMP;
END;
/

-- ----------------------------
-- Primary Key structure for table POSTS
-- ----------------------------
ALTER TABLE "HALFWALL"."POSTS" ADD CONSTRAINT "SYS_C007553" PRIMARY KEY ("POST_ID");

-- ----------------------------
-- Checks structure for table POSTS
-- ----------------------------
ALTER TABLE "HALFWALL"."POSTS" ADD CONSTRAINT "SYS_C007551" CHECK ("POST_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."POSTS" ADD CONSTRAINT "SYS_C007552" CHECK ("USER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table POST_FILES
-- ----------------------------
ALTER TABLE "HALFWALL"."POST_FILES" ADD CONSTRAINT "SYS_C007681" PRIMARY KEY ("POST_FILE_ID");

-- ----------------------------
-- Checks structure for table POST_FILES
-- ----------------------------
ALTER TABLE "HALFWALL"."POST_FILES" ADD CONSTRAINT "SYS_C007680" CHECK ("POST_FILE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table POST_FILES
-- ----------------------------
CREATE TRIGGER "HALFWALL"."DELETE_POST_FILE_CLEANUP_TRG" AFTER DELETE ON "HALFWALL"."POST_FILES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
  IF :OLD.FILE_LOCATION IS NOT NULL THEN
		INSERT INTO STORAGE_DUMP(FILE_PATH) VALUES(:OLD.FILE_LOCATION);
	END IF;
END;
/
CREATE TRIGGER "HALFWALL"."POST_FILE_INSERT_1" BEFORE INSERT ON "HALFWALL"."POST_FILES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
  :NEW.POST_FILE_ID := POST_FILE_SEQ.NEXTVAL;
END;
/

-- ----------------------------
-- Primary Key structure for table SELL_POSTS
-- ----------------------------
ALTER TABLE "HALFWALL"."SELL_POSTS" ADD CONSTRAINT "SYS_C007688" PRIMARY KEY ("POST_ID");

-- ----------------------------
-- Checks structure for table SELL_POSTS
-- ----------------------------
ALTER TABLE "HALFWALL"."SELL_POSTS" ADD CONSTRAINT "SYS_C007687" CHECK ("POST_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table TUITION_NOTIFICATION_CLASSES
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_NOTIFICATION_CLASSES" ADD CONSTRAINT "SYS_C007748" PRIMARY KEY ("USER_ID", "CLASS");

-- ----------------------------
-- Checks structure for table TUITION_NOTIFICATION_CLASSES
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_NOTIFICATION_CLASSES" ADD CONSTRAINT "SYS_C007746" CHECK ("USER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."TUITION_NOTIFICATION_CLASSES" ADD CONSTRAINT "SYS_C007747" CHECK ("CLASS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table TUITION_NOTIFICATION_LOCATIONS
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_NOTIFICATION_LOCATIONS" ADD CONSTRAINT "SYS_C007744" PRIMARY KEY ("USER_ID", "LOCATION");

-- ----------------------------
-- Checks structure for table TUITION_NOTIFICATION_LOCATIONS
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_NOTIFICATION_LOCATIONS" ADD CONSTRAINT "SYS_C007742" CHECK ("USER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."TUITION_NOTIFICATION_LOCATIONS" ADD CONSTRAINT "SYS_C007743" CHECK ("LOCATION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table TUITION_NOTIFICATION_SUBJECTS
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_NOTIFICATION_SUBJECTS" ADD CONSTRAINT "SYS_C007752" PRIMARY KEY ("USER_ID", "SUBJECT");

-- ----------------------------
-- Checks structure for table TUITION_NOTIFICATION_SUBJECTS
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_NOTIFICATION_SUBJECTS" ADD CONSTRAINT "SYS_C007750" CHECK ("USER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."TUITION_NOTIFICATION_SUBJECTS" ADD CONSTRAINT "SYS_C007751" CHECK ("SUBJECT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table TUITION_POSTS
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_POSTS" ADD CONSTRAINT "SYS_C007706" PRIMARY KEY ("POST_ID");

-- ----------------------------
-- Checks structure for table TUITION_POSTS
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_POSTS" ADD CONSTRAINT "SYS_C007705" CHECK ("POST_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table TUITION_POSTS
-- ----------------------------
CREATE TRIGGER "HALFWALL"."TUITION_POST_INSERT_1" BEFORE INSERT ON "HALFWALL"."TUITION_POSTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
  :NEW.BOOKED := 'No';
END;
/

-- ----------------------------
-- Primary Key structure for table TUITION_SUBJECTS
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_SUBJECTS" ADD CONSTRAINT "SYS_C007712" PRIMARY KEY ("POST_ID", "SUBJECT");

-- ----------------------------
-- Checks structure for table TUITION_SUBJECTS
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_SUBJECTS" ADD CONSTRAINT "SYS_C007711" CHECK ("POST_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table USERS
-- ----------------------------
ALTER TABLE "HALFWALL"."USERS" ADD CONSTRAINT "SYS_C007529" PRIMARY KEY ("USER_ID");

-- ----------------------------
-- Uniques structure for table USERS
-- ----------------------------
ALTER TABLE "HALFWALL"."USERS" ADD CONSTRAINT "UNQ_EMAIL" UNIQUE ("EMAIL") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."USERS" ADD CONSTRAINT "UNQ_STUDENT_ID" UNIQUE ("STUDENT_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table USERS
-- ----------------------------
ALTER TABLE "HALFWALL"."USERS" ADD CONSTRAINT "SYS_C007524" CHECK ("USER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."USERS" ADD CONSTRAINT "SYS_C007525" CHECK ("STUDENT_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."USERS" ADD CONSTRAINT "SYS_C007526" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."USERS" ADD CONSTRAINT "SYS_C007527" CHECK ("EMAIL" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."USERS" ADD CONSTRAINT "SYS_C007528" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table USERS
-- ----------------------------
CREATE TRIGGER "HALFWALL"."DELETE_USER_CONVERSATION_TRG" AFTER DELETE ON "HALFWALL"."USERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
  DELETE FROM CONVERSATIONS C
	WHERE C.CONVERSATION_ID IN (SELECT DISTINCT CM.CONVERSATION_ID FROM CONVERSATION_MEMBERS CM WHERE CM.USER_ID = :OLD.USER_ID);
END;
/
CREATE TRIGGER "HALFWALL"."DELETE_USER_NOTIFICATION_TRG" AFTER DELETE ON "HALFWALL"."USERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
  DELETE FROM NOTIFICATIONS 
	WHERE RECEIVER_ID = :OLD.USER_ID
	OR SENDER_ID = :OLD.USER_ID;
END;
/
CREATE TRIGGER "HALFWALL"."PFP_DUMP" AFTER UPDATE OF "PROFILE_PIC" ON "HALFWALL"."USERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
  IF :OLD.PROFILE_PIC IS NOT NULL THEN
	INSERT INTO STORAGE_DUMP(FILE_PATH) VALUES(:OLD.PROFILE_PIC);
	END IF;
END;
/

-- ----------------------------
-- Foreign Keys structure for table COMMENTS
-- ----------------------------
ALTER TABLE "HALFWALL"."COMMENTS" ADD CONSTRAINT "COMMENTS_FK1" FOREIGN KEY ("POST_ID") REFERENCES "HALFWALL"."POSTS" ("POST_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."COMMENTS" ADD CONSTRAINT "COMMENTS_FK2" FOREIGN KEY ("USER_ID") REFERENCES "HALFWALL"."USERS" ("USER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table CONVERSATION_MEMBERS
-- ----------------------------
ALTER TABLE "HALFWALL"."CONVERSATION_MEMBERS" ADD CONSTRAINT "CONVERSATION_MEMBER_FK1" FOREIGN KEY ("CONVERSATION_ID") REFERENCES "HALFWALL"."CONVERSATIONS" ("CONVERSATION_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table FOLLOWS
-- ----------------------------
ALTER TABLE "HALFWALL"."FOLLOWS" ADD CONSTRAINT "FOLLOWS_FK1" FOREIGN KEY ("FOLLOWER_ID") REFERENCES "HALFWALL"."USERS" ("USER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."FOLLOWS" ADD CONSTRAINT "FOLLOWS_FK2" FOREIGN KEY ("FOLLOWEE_ID") REFERENCES "HALFWALL"."USERS" ("USER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table GROUP_MEMBERS
-- ----------------------------
ALTER TABLE "HALFWALL"."GROUP_MEMBERS" ADD CONSTRAINT "GROUP_MEMBERS_FK1" FOREIGN KEY ("GROUP_ID") REFERENCES "HALFWALL"."GROUPS" ("GROUP_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."GROUP_MEMBERS" ADD CONSTRAINT "GROUP_MEMBERS_FK2" FOREIGN KEY ("USER_ID") REFERENCES "HALFWALL"."USERS" ("USER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table LIKES
-- ----------------------------
ALTER TABLE "HALFWALL"."LIKES" ADD CONSTRAINT "LIKES_PK1" FOREIGN KEY ("USER_ID") REFERENCES "HALFWALL"."USERS" ("USER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."LIKES" ADD CONSTRAINT "LIKES_PK2" FOREIGN KEY ("POST_ID") REFERENCES "HALFWALL"."POSTS" ("POST_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MESSAGES
-- ----------------------------
ALTER TABLE "HALFWALL"."MESSAGES" ADD CONSTRAINT "MESSAGES_FK_1" FOREIGN KEY ("USER_ID") REFERENCES "HALFWALL"."USERS" ("USER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY DISABLE NOVALIDATE;
ALTER TABLE "HALFWALL"."MESSAGES" ADD CONSTRAINT "MESSAGES_FK_2" FOREIGN KEY ("CONVERSATION_ID") REFERENCES "HALFWALL"."CONVERSATIONS" ("CONVERSATION_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table NOTIFICATIONS
-- ----------------------------
ALTER TABLE "HALFWALL"."NOTIFICATIONS" ADD CONSTRAINT "NOTIFICATIONS_FK1" FOREIGN KEY ("RECEIVER_ID") REFERENCES "HALFWALL"."USERS" ("USER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY DISABLE NOVALIDATE;
ALTER TABLE "HALFWALL"."NOTIFICATIONS" ADD CONSTRAINT "NOTIFICATIONS_FK2" FOREIGN KEY ("SENDER_ID") REFERENCES "HALFWALL"."USERS" ("USER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY DISABLE NOVALIDATE;

-- ----------------------------
-- Foreign Keys structure for table POSTS
-- ----------------------------
ALTER TABLE "HALFWALL"."POSTS" ADD CONSTRAINT "POSTS_PK1" FOREIGN KEY ("USER_ID") REFERENCES "HALFWALL"."USERS" ("USER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "HALFWALL"."POSTS" ADD CONSTRAINT "POSTS_PK2" FOREIGN KEY ("GROUP_ID") REFERENCES "HALFWALL"."GROUPS" ("GROUP_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table POST_FILES
-- ----------------------------
ALTER TABLE "HALFWALL"."POST_FILES" ADD CONSTRAINT "POST_FILES_FK1" FOREIGN KEY ("POST_ID") REFERENCES "HALFWALL"."POSTS" ("POST_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table SELL_POSTS
-- ----------------------------
ALTER TABLE "HALFWALL"."SELL_POSTS" ADD CONSTRAINT "SELL_POSTS_FK_1" FOREIGN KEY ("POST_ID") REFERENCES "HALFWALL"."POSTS" ("POST_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table TUITION_NOTIFICATION_CLASSES
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_NOTIFICATION_CLASSES" ADD CONSTRAINT "TUITION_NOTIFICATION_CLASSES_FK1" FOREIGN KEY ("USER_ID") REFERENCES "HALFWALL"."USERS" ("USER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table TUITION_NOTIFICATION_LOCATIONS
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_NOTIFICATION_LOCATIONS" ADD CONSTRAINT "TUITION_NOTIFICATION_LOCATIONS_FK1" FOREIGN KEY ("USER_ID") REFERENCES "HALFWALL"."USERS" ("USER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table TUITION_NOTIFICATION_SUBJECTS
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_NOTIFICATION_SUBJECTS" ADD CONSTRAINT "TUITION_NOTIFICATION_SUBJECT_FK1" FOREIGN KEY ("USER_ID") REFERENCES "HALFWALL"."USERS" ("USER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table TUITION_POSTS
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_POSTS" ADD CONSTRAINT "TUTION_POST_FK1" FOREIGN KEY ("POST_ID") REFERENCES "HALFWALL"."POSTS" ("POST_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table TUITION_SUBJECTS
-- ----------------------------
ALTER TABLE "HALFWALL"."TUITION_SUBJECTS" ADD CONSTRAINT "TUTION_SUBJECT" FOREIGN KEY ("POST_ID") REFERENCES "HALFWALL"."POSTS" ("POST_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
